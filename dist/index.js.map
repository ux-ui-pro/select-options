{"mappings":"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","sources":["src/SelectOptions.js"],"sourcesContent":["class SelectOptions {\n  #selectContainer;\n\n  #floatingLabel;\n\n  #notches = [];\n\n  #customSelects = [];\n\n  #openSelect = null;\n\n  #resizeObserver;\n\n  #mobileMode = false;\n\n  constructor({ mobileMode = false } = {}) {\n    this.#mobileMode = mobileMode;\n    this.#selectContainer = [...document.querySelectorAll('.select-option-container select')];\n    this.#floatingLabel = [...document.querySelectorAll('.floating-label')];\n\n    this.#resizeObserver = new ResizeObserver((entries) => {\n      entries.forEach((entry) => {\n        const notch = entry.target.closest('.notched-outline')?.querySelector('.notched-outline__notch');\n\n        if (notch) this.#setNotchWidth(notch, this.#getNotchWidth(notch));\n      });\n    });\n  }\n\n  #notched = () => {\n    this.#floatingLabel.forEach((label) => {\n      const notchedOutline = label.closest('.notched-outline') ?? this.#createNotchedOutline(label);\n\n      this.#notches.push({ container: notchedOutline.parentNode, notch: notchedOutline.querySelector('.notched-outline__notch') });\n\n      const lastNotch = this.#notches.at(-1).notch;\n\n      this.#setNotchWidth(lastNotch, this.#getNotchWidth(lastNotch));\n      this.#resizeObserver.observe(notchedOutline.querySelector('.floating-label'));\n    });\n  };\n\n  #createNotchedOutline(label) {\n    const notchedOutline = document.createElement('div');\n\n    notchedOutline.classList.add('notched-outline');\n    notchedOutline.innerHTML = `\n      <div class=\"notched-outline__leading\"></div>\n      <div class=\"notched-outline__notch\">${label.outerHTML}</div>\n      <div class=\"notched-outline__trailing\"></div>\n    `;\n    label.replaceWith(notchedOutline);\n\n    return notchedOutline;\n  }\n\n  #setNotchWidth = (notch, width) => notch.style.width = width;\n\n  #getNotchWidth = (notch) => {\n    const label = notch.querySelector('.floating-label');\n\n    return label ? `${(parseFloat(getComputedStyle(label).width) + 13) * 0.75}px` : 'auto';\n  };\n\n  #setupCustomSelect = (selectElement, customSelect, options) => {\n    const selectTrigger = customSelect.querySelector('.select-option-trigger') ?? document.createElement('div');\n    const selectItems = customSelect.querySelector('.select-option-list') ?? document.createElement('div');\n\n    selectTrigger.classList.add('select-option-trigger');\n    selectItems.classList.add('select-option-list');\n\n    customSelect.append(selectTrigger, selectItems);\n\n    this.#createOptions(selectElement, selectTrigger, selectItems, options);\n\n    if (!(this.#mobileMode && this.#isMobileDevice())) {\n      selectTrigger.addEventListener('click', (e) => {\n        e.stopPropagation();\n\n        this.#openSelect === customSelect ? this.#closeDropdown(customSelect) : this.#openDropdown(customSelect);\n      });\n    }\n\n    this.#updateCustomSelectState(customSelect, selectElement);\n\n    this.#customSelects.push(customSelect);\n\n    selectElement.addEventListener('change', () => {\n      this.#updateCustomSelect(selectElement, customSelect, options);\n    });\n\n    if (this.#mobileMode && this.#isMobileDevice()) {\n      customSelect.classList.add('select-option--mobile');\n    }\n  };\n\n  #createOptions = (selectElement, selectTrigger, selectItems, options) => {\n    selectItems.innerHTML = '';\n\n    options.forEach((option, index) => {\n      const selectItem = document.createElement('div');\n\n      selectItem.classList.add('select-option-list-item');\n      selectItem.textContent = option.textContent;\n\n      const labelValue = option.getAttribute('label');\n\n      if (labelValue) selectItem.classList.add(`select-option-list-item--${labelValue}`);\n\n      if (option.selected) {\n        selectItem.classList.add('select-option-list-item--selected');\n        selectTrigger.textContent = option.textContent;\n\n        if (labelValue) selectTrigger.classList.add(`select-option-trigger--${labelValue}`);\n      }\n\n      selectItem.addEventListener('click', () => this.#selectItem(selectItem, selectTrigger, selectElement, index, selectItems));\n      selectItems.appendChild(selectItem);\n    });\n  };\n\n  #updateCustomSelect = (selectElement, customSelect, options) => {\n    const selectTrigger = customSelect.querySelector('.select-option-trigger');\n    const selectItems = customSelect.querySelector('.select-option-list');\n    const { selectedIndex } = selectElement;\n    const selectedOption = options[selectedIndex];\n    const labelValue = selectedOption.getAttribute('label');\n\n    selectTrigger.textContent = selectedOption.textContent;\n    selectTrigger.classList.remove(...Array.from(selectTrigger.classList).filter((cls) => cls.startsWith('select-option-trigger--')));\n\n    if (labelValue) {\n      selectTrigger.classList.add(`select-option-trigger--${labelValue}`);\n    }\n\n    customSelect.classList.toggle('select-option--selected', selectedIndex > 0);\n\n    this.#createOptions(selectElement, selectTrigger, selectItems, options);\n  };\n\n  #selectItem = (selectItem, selectTrigger, selectElement, index, selectItems) => {\n    const customSelect = selectTrigger.closest('.select-option');\n    const items = Array.from(selectItems.children);\n\n    items.forEach((item) => item.classList.remove('select-option-list-item--selected'));\n    selectItem.classList.add('select-option-list-item--selected');\n\n    selectTrigger.textContent = selectItem.textContent;\n    selectElement.selectedIndex = index;\n\n    selectTrigger.classList.remove(...Array.from(selectTrigger.classList).filter((cls) => cls.startsWith('select-option-trigger--')));\n\n    const selectedOption = selectElement.options[index];\n    const labelValue = selectedOption.getAttribute('label');\n\n    if (labelValue) selectTrigger.classList.add(`select-option-trigger--${labelValue}`);\n\n    customSelect.classList.toggle('select-option--selected', index > 0);\n    selectElement.dispatchEvent(new Event('change'));\n\n    this.#closeDropdown(customSelect);\n  };\n\n  #closeDropdown = (customSelect) => {\n    customSelect.classList.remove('select-option--opened');\n\n    this.#openSelect = null;\n  };\n\n  #openDropdown = (customSelect) => {\n    this.#closeOpenedDropdowns();\n\n    customSelect.classList.add('select-option--opened');\n\n    this.#openSelect = customSelect;\n  };\n\n  #closeOpenedDropdowns = (e) => {\n    this.#customSelects.forEach((dropdown) => {\n      if (!e || !dropdown.contains(e.target)) dropdown.classList.remove('select-option--opened');\n    });\n\n    this.#openSelect = null;\n  };\n\n  #checkAndSetDownstairsClass = (customSelect) => {\n    const rect = customSelect.getBoundingClientRect();\n\n    customSelect.classList.toggle('select-option--downstairs', rect.bottom + 160 > window.innerHeight);\n  };\n\n  #handleResize = () => {\n    this.#customSelects.forEach(this.#checkAndSetDownstairsClass);\n  };\n\n  #isMobileOS = () => /android/i.test(navigator.userAgent || navigator.vendor || window.opera)\n    || /iPad|iPhone|iPod/.test(navigator.userAgent || navigator.vendor || window.opera) && !window.MSStream;\n\n  #isTouchDevice = () => 'ontouchstart' in window || navigator.maxTouchPoints > 0\n    || window.matchMedia('(hover: none) and (pointer: coarse)').matches;\n\n  #isMobileDevice = () => this.#isTouchDevice() || this.#isMobileOS();\n\n  #updateCustomSelectState = (customSelect, selectElement) => {\n    const hasLabel = customSelect.querySelector('label.floating-label') !== null;\n\n    customSelect.classList.toggle('select-option--labeled', hasLabel);\n    customSelect.classList.toggle('select-option--unlabeled', !hasLabel);\n    customSelect.classList.toggle('select-option--selected', hasLabel && selectElement.selectedIndex > 0);\n  };\n\n  init = async () => {\n    this.#notched();\n\n    this.#selectContainer.forEach((selectElement) => {\n      const customSelect = selectElement.closest('.select-option-container')?.querySelector('.select-option');\n      const options = [...selectElement.options];\n\n      if (customSelect) {\n        this.#setupCustomSelect(selectElement, customSelect, options);\n        this.#checkAndSetDownstairsClass(customSelect);\n      }\n    });\n\n    document.addEventListener('click', this.#closeOpenedDropdowns);\n    window.addEventListener('resize', this.#handleResize);\n    window.addEventListener('scroll', this.#handleResize);\n  };\n}\n\nexport default SelectOptions;\n"],"names":[],"version":3,"file":"index.js.map"}