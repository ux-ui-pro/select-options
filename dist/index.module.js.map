{"mappings":"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","sources":["src/SelectOptions.js"],"sourcesContent":["class SelectOptions {\n  #selectContainer;\n  #floatingLabel;\n  #notches = [];\n  #customSelects = [];\n  #openSelect = null;\n  #resizeObserver;\n  #mobileMode = false;\n\n  constructor(options = {}) {\n    this.#mobileMode = options.mobileMode || false;\n    this.#selectContainer = Array.from(document.querySelectorAll('.select-option-container select'));\n    this.#floatingLabel = Array.from(document.querySelectorAll('.floating-label'));\n\n    this.#resizeObserver = new ResizeObserver((entries) => entries.forEach((entry) => {\n      const notch = entry.target.closest('.notched-outline')?.querySelector('.notched-outline__notch');\n      if (notch) this.#setNotchWidth(notch, this.#getNotchWidth(notch));\n    }));\n  }\n\n  #notched = () => {\n    this.#floatingLabel.forEach((label) => {\n      const notchedOutline = label.closest('.notched-outline') ?? document.createElement('div');\n      if (!notchedOutline.classList.contains('notched-outline')) {\n        notchedOutline.classList.add('notched-outline');\n        notchedOutline.innerHTML = `\n          <div class=\"notched-outline__leading\"></div>\n          <div class=\"notched-outline__notch\">${label.outerHTML}</div>\n          <div class=\"notched-outline__trailing\"></div>\n        `;\n        label.replaceWith(notchedOutline);\n      }\n\n      this.#notches.push({\n        container: notchedOutline.parentNode,\n        notch: notchedOutline.querySelector('.notched-outline__notch'),\n      });\n\n      const lastNotch = this.#notches.at(-1).notch;\n      this.#setNotchWidth(lastNotch, this.#getNotchWidth(lastNotch));\n      this.#resizeObserver.observe(notchedOutline.querySelector('.floating-label'));\n    });\n  };\n\n  #setNotchWidth = (notch, width) => notch.style.width = width;\n\n  #getNotchWidth = (notch) => {\n    const label = notch.querySelector('.floating-label');\n    return label ? `${(parseFloat(getComputedStyle(label).width) + 13) * 0.75}px` : 'auto';\n  };\n\n  #setupCustomSelect = (selectElement, customSelect, options) => {\n    const selectTrigger = customSelect.querySelector('.select-option-trigger') ?? document.createElement('div');\n    const selectItems = customSelect.querySelector('.select-option-list') ?? document.createElement('div');\n\n    selectTrigger.classList.add('select-option-trigger');\n    selectItems.classList.add('select-option-list');\n\n    if (!customSelect.contains(selectTrigger)) customSelect.appendChild(selectTrigger);\n    if (!customSelect.contains(selectItems)) customSelect.appendChild(selectItems);\n\n    this.#createOptions(selectElement, selectTrigger, selectItems, options);\n\n    // Check if mobileMode is true and the device is mobile\n    if (!(this.#mobileMode && this.#isMobileDevice())) {\n      selectTrigger.addEventListener('click', (e) => {\n        e.stopPropagation();\n        this.#openSelect === customSelect ? this.#closeDropdown(customSelect) : this.#openDropdown(customSelect);\n      });\n    }\n\n    const hasLabel = customSelect.querySelector('label.floating-label') !== null;\n    customSelect.classList.toggle('select-option--labeled', hasLabel);\n    customSelect.classList.toggle('select-option--unlabeled', !hasLabel);\n    customSelect.classList.toggle('select-option--selected', hasLabel && selectElement.selectedIndex > 0);\n\n    this.#customSelects.push(customSelect);\n\n    // Add event listener for change event\n    selectElement.addEventListener('change', () => {\n      this.#updateCustomSelect(selectElement, customSelect, options);\n    });\n\n    // Add mobile class if necessary\n    if (this.#mobileMode && this.#isMobileDevice()) {\n      customSelect.classList.add('select-option--mobile');\n    }\n  };\n\n  #createOptions = (selectElement, selectTrigger, selectItems, options) => {\n    selectItems.innerHTML = '';\n\n    options.forEach((option, index) => {\n      const selectItem = document.createElement('div');\n      selectItem.classList.add('select-option-list-item');\n      selectItem.textContent = option.textContent;\n\n      const labelValue = option.getAttribute('label');\n      if (labelValue) selectItem.classList.add(`select-option-list-item--${labelValue}`);\n\n      if (option.selected) {\n        selectItem.classList.add('select-option-list-item--selected');\n        selectTrigger.textContent = option.textContent;\n        if (labelValue) selectTrigger.classList.add(`select-option-trigger--${labelValue}`);\n      }\n\n      selectItem.addEventListener('click', () => this.#selectItem(selectItem, selectTrigger, selectElement, index, selectItems));\n      selectItems.appendChild(selectItem);\n    });\n  };\n\n  #updateCustomSelect = (selectElement, customSelect, options) => {\n    const selectTrigger = customSelect.querySelector('.select-option-trigger');\n    const selectItems = customSelect.querySelector('.select-option-list');\n    const selectedIndex = selectElement.selectedIndex;\n    const selectedOption = options[selectedIndex];\n    const labelValue = selectedOption.getAttribute('label');\n\n    selectTrigger.textContent = selectedOption.textContent;\n    selectTrigger.classList.remove(...Array.from(selectTrigger.classList).filter((cls) => cls.startsWith('select-option-trigger--')));\n    if (labelValue) {\n      selectTrigger.classList.add(`select-option-trigger--${labelValue}`);\n    }\n\n    customSelect.classList.toggle('select-option--selected', selectedIndex > 0);\n    this.#createOptions(selectElement, selectTrigger, selectItems, options);\n  };\n\n  #selectItem = (selectItem, selectTrigger, selectElement, index, selectItems) => {\n    const customSelect = selectTrigger.closest('.select-option');\n    const items = Array.from(selectItems.children);\n\n    items.forEach((item) => item.classList.remove('select-option-list-item--selected'));\n    selectItem.classList.add('select-option-list-item--selected');\n\n    selectTrigger.textContent = selectItem.textContent;\n    selectElement.selectedIndex = index;\n\n    selectTrigger.classList.remove(...Array.from(selectTrigger.classList).filter((cls) => cls.startsWith('select-option-trigger--')));\n\n    const selectedOption = selectElement.options[index];\n    const labelValue = selectedOption.getAttribute('label');\n    if (labelValue) selectTrigger.classList.add(`select-option-trigger--${labelValue}`);\n\n    customSelect.classList.toggle('select-option--selected', index > 0);\n    selectElement.dispatchEvent(new Event('change'));\n    customSelect.classList.remove('select-option--opened');\n    this.#openSelect = null;\n  };\n\n  #closeDropdown = (customSelect) => {\n    customSelect.classList.remove('select-option--opened');\n    this.#openSelect = null;\n  };\n\n  #openDropdown = (customSelect) => {\n    this.#closeOpenedDropdowns();\n    customSelect.classList.add('select-option--opened');\n    this.#openSelect = customSelect;\n  };\n\n  #closeOpenedDropdowns = (e) => {\n    this.#customSelects.forEach((dropdown) => {\n      if (!e || !dropdown.contains(e.target)) dropdown.classList.remove('select-option--opened');\n    });\n    this.#openSelect = null;\n  };\n\n  #checkAndSetDownstairsClass = (customSelect) => {\n    const rect = customSelect.getBoundingClientRect();\n    customSelect.classList.toggle('select-option--downstairs', rect.bottom + 160 > window.innerHeight);\n  };\n\n  #handleResize = () => {\n    this.#customSelects.forEach((customSelect) => {\n      this.#checkAndSetDownstairsClass(customSelect);\n    });\n  };\n\n  #isMobileOS = () => {\n    const userAgent = navigator.userAgent || navigator.vendor || window.opera;\n    const isAndroid = /android/i.test(userAgent);\n    const isIOS = /iPad|iPhone|iPod/.test(userAgent) && !window.MSStream;\n    return isAndroid || isIOS;\n  };\n\n  #isTouchDevice = () => {\n    const touchEventSupported = 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n    const touchMediaQuery = window.matchMedia('(hover: none) and (pointer: coarse)').matches;\n    return touchEventSupported && touchMediaQuery;\n  };\n\n  #isMobileDevice = () => {\n    return this.#isTouchDevice() || this.#isMobileOS();\n  };\n\n  init = async () => {\n    await this.#notched();\n\n    const selectElements = this.#selectContainer;\n    selectElements.forEach((selectElement) => {\n      const customSelect = selectElement.closest('.select-option-container')?.querySelector('.select-option');\n      const options = Array.from(selectElement.options);\n\n      if (customSelect) {\n        this.#setupCustomSelect(selectElement, customSelect, options);\n        this.#checkAndSetDownstairsClass(customSelect);\n      }\n    });\n\n    document.addEventListener('click', this.#closeOpenedDropdowns);\n    window.addEventListener('resize', this.#handleResize);\n    window.addEventListener('scroll', this.#handleResize);\n  };\n}\n\nexport default SelectOptions;\n"],"names":[],"version":3,"file":"index.module.js.map"}