{"mappings":"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","sources":["src/SelectOptions.js"],"sourcesContent":["class SelectOptions {\n  #notches = [];\n\n  openSelect = null;\n\n  #resizeObserver = new ResizeObserver(entries =>\n    entries.forEach(entry => {\n      const notch = entry.target.closest('.notched-outline')?.querySelector('.notched-outline__notch');\n\n      if (notch) this.#setNotchWidth(notch, this.#getNotchWidth(notch));\n    })\n  );\n\n  #notched = () => {\n    document.querySelectorAll('.floating-label').forEach(label => {\n      let notchedOutline = label.closest('.notched-outline') ?? document.createElement('div');\n\n      if (!notchedOutline.classList.contains('notched-outline')) {\n        notchedOutline.classList.add('notched-outline');\n        notchedOutline.innerHTML = `\n          <div class=\"notched-outline__leading\"></div>\n          <div class=\"notched-outline__notch\">${label.outerHTML}</div>\n          <div class=\"notched-outline__trailing\"></div>\n        `;\n        label.replaceWith(notchedOutline);\n      }\n\n      this.#notches.push({\n        container: notchedOutline.parentNode,\n        notch: notchedOutline.querySelector('.notched-outline__notch'),\n      });\n\n      const lastNotch = this.#notches.at(-1).notch;\n\n      this.#setNotchWidth(lastNotch, this.#getNotchWidth(lastNotch));\n      this.#resizeObserver.observe(notchedOutline.querySelector('.floating-label'));\n    });\n  }\n\n  #setNotchWidth = (notch, width) => notch.style.width = width;\n\n  #getNotchWidth = notch => {\n    const label = notch.querySelector('.floating-label');\n\n    return label ? `${(parseFloat(getComputedStyle(label).width) + 13) * 0.75}px` : 'auto';\n  }\n\n  #setupCustomSelect = (selectElement, customSelect) => {\n    const selectTrigger = customSelect.querySelector('.select-option-trigger') ?? document.createElement('div');\n    const selectItems = customSelect.querySelector('.select-option-list') ?? document.createElement('div');\n\n    selectTrigger.classList.add('select-option-trigger');\n    selectItems.classList.add('select-option-list');\n\n    if (!customSelect.contains(selectTrigger)) customSelect.appendChild(selectTrigger);\n    if (!customSelect.contains(selectItems)) customSelect.appendChild(selectItems);\n\n    this.#createOptions(selectElement, selectTrigger, selectItems);\n\n    selectTrigger.addEventListener('click', e => {\n      e.stopPropagation();\n\n      this.openSelect === customSelect ? this.#closeDropdown(customSelect) : this.#openDropdown(customSelect);\n    });\n\n    const hasLabel = customSelect.querySelector('label.floating-label') !== null;\n\n    customSelect.classList.toggle('select-option--labeled', hasLabel);\n    customSelect.classList.toggle('select-option--unlabeled', !hasLabel);\n    customSelect.classList.toggle('select-option--selected', hasLabel && selectElement.selectedIndex > 0);\n  }\n\n  #createOptions = (selectElement, selectTrigger, selectItems) => {\n    selectItems.innerHTML = '';\n\n    selectElement.querySelectorAll('option').forEach((option, index) => {\n      const selectItem = document.createElement('div');\n\n      selectItem.classList.add('select-option-list-item');\n      selectItem.textContent = option.textContent;\n\n      const labelValue = option.getAttribute('label');\n\n      if (labelValue) selectItem.classList.add(`select-option-list-item--${labelValue}`);\n\n      if (option.selected) {\n        selectItem.classList.add('select-option-list-item--selected');\n        selectTrigger.textContent = option.textContent;\n\n        if (labelValue) selectTrigger.classList.add(`select-option-trigger--${labelValue}`);\n      }\n\n      selectItem.addEventListener('click', () => this.#selectItem(selectItem, selectTrigger, selectElement, index, selectItems));\n      selectItems.appendChild(selectItem);\n    });\n  }\n\n  #selectItem = (selectItem, selectTrigger, selectElement, index, selectItems) => {\n    const customSelect = selectTrigger.closest('.select-option');\n\n    selectItems.querySelectorAll('.select-option-list-item').forEach(item => item.classList.remove('select-option-list-item--selected'));\n    selectItem.classList.add('select-option-list-item--selected');\n\n    selectTrigger.textContent = selectItem.textContent;\n    selectElement.selectedIndex = index;\n\n    selectTrigger.classList.remove(...Array.from(selectTrigger.classList).filter(cls => cls.startsWith('select-option-trigger--')));\n\n    const selectedOption = selectElement.options[index];\n    const labelValue = selectedOption.getAttribute('label');\n\n    if (labelValue) selectTrigger.classList.add(`select-option-trigger--${labelValue}`);\n\n    customSelect.classList.toggle('select-option--selected', index > 0);\n    selectElement.dispatchEvent(new Event('change'));\n    customSelect.classList.remove('select-option--opened');\n\n    this.openSelect = null;\n  }\n\n  #closeDropdown = customSelect => {\n    customSelect.classList.remove('select-option--opened');\n\n    this.openSelect = null;\n  }\n\n  #openDropdown = customSelect => {\n    this.#closeOpenedDropdowns();\n\n    customSelect.classList.add('select-option--opened');\n\n    this.openSelect = customSelect;\n  }\n\n  #closeOpenedDropdowns = (e) => {\n    document.querySelectorAll('.select-option.select-option--opened').forEach(dropdown => {\n      if (!e || !dropdown.contains(e.target)) dropdown.classList.remove('select-option--opened');\n    });\n\n    this.openSelect = null;\n  }\n\n  #checkAndSetDownstairsClass = customSelect => {\n    const rect = customSelect.getBoundingClientRect();\n\n    customSelect.classList.toggle('select-option--downstairs', rect.bottom + 160 > window.innerHeight);\n  }\n\n  #handleResize = () => {\n    document.querySelectorAll('.select-option-container .select-option').forEach(this.#checkAndSetDownstairsClass);\n  }\n\n  init = async () => {\n    await this.#notched();\n\n    document.querySelectorAll('.select-option-container select').forEach(selectElement => {\n      const customSelect = selectElement.closest('.select-option-container')?.querySelector('.select-option');\n\n      if (customSelect) {\n        this.#setupCustomSelect(selectElement, customSelect);\n\n        selectElement.style.display = 'none';\n\n        this.#checkAndSetDownstairsClass(customSelect);\n      }\n    });\n\n    document.addEventListener('click', this.#closeOpenedDropdowns);\n    window.addEventListener('resize', this.#handleResize);\n    window.addEventListener('scroll', this.#handleResize);\n  }\n}\n\nexport default SelectOptions;\n"],"names":[],"version":3,"file":"index.module.js.map"}